{"version":3,"file":"nftController.js","names":["test","req","res","send","network","process","env","NETWORK","list_all_wallet_nfts","alchemy","getAlchemy","nfts","nft","getNftsForOwner","params","walletId","ownedNfts","register_a_wallet","nftController"],"sources":["../../../src/api/controllers/nftController.js"],"sourcesContent":["import { getAlchemy } from \"../../utils/alchemy.js\";\r\n//import { testDb } from \"../models/test.js\";\r\n\r\nfunction test(req, res) {\r\n    //testDb();\r\n    res.send({network: process.env.NETWORK});\r\n}\r\n\r\n/// returns all the nfts owned by a wallet address\r\nasync function list_all_wallet_nfts(req, res) {\r\n    var alchemy = getAlchemy();\r\n    // Print all NFTs returned in the response:\r\n    var nfts = await alchemy.nft.getNftsForOwner(req.params.walletId);\r\n    res.send(nfts.ownedNfts);\r\n}\r\n\r\n///register a new wallet account in the system\r\nasync function register_a_wallet(req, res) {\r\n    //\r\n}\r\n\r\nexport const nftController = { test, list_all_wallet_nfts, register_a_wallet };"],"mappings":";;;;;;AAAA;AACA;;AAEA,SAASA,IAAI,CAACC,GAAG,EAAEC,GAAG,EAAE;EACpB;EACAA,GAAG,CAACC,IAAI,CAAC;IAACC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;EAAO,CAAC,CAAC;AAC5C;;AAEA;AACA,eAAeC,oBAAoB,CAACP,GAAG,EAAEC,GAAG,EAAE;EAC1C,IAAIO,OAAO,GAAG,IAAAC,mBAAU,GAAE;EAC1B;EACA,IAAIC,IAAI,GAAG,MAAMF,OAAO,CAACG,GAAG,CAACC,eAAe,CAACZ,GAAG,CAACa,MAAM,CAACC,QAAQ,CAAC;EACjEb,GAAG,CAACC,IAAI,CAACQ,IAAI,CAACK,SAAS,CAAC;AAC5B;;AAEA;AACA,eAAeC,iBAAiB,CAAChB,GAAG,EAAEC,GAAG,EAAE;EACvC;AAAA;AAGG,MAAMgB,aAAa,GAAG;EAAElB,IAAI;EAAEQ,oBAAoB;EAAES;AAAkB,CAAC;AAAC"}