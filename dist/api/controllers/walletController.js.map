{"version":3,"file":"walletController.js","names":["list_all_wallets","req","res","getdata","db","users","findAll","body","json","success","message","data","err","console","log","status","create_wallet","walletAddress","checkdata","findOne","where","wallet","createdata","create","walletController"],"sources":["../../../src/api/controllers/walletController.js"],"sourcesContent":["import db from \"../../database/models\";\r\n\r\nasync function list_all_wallets(req, res) {\r\n    try{\r\n        let getdata = await db.users.findAll(req.body);\r\n        if(getdata){\r\n             res.json({\r\n                 success: true,\r\n                 message:\"list_all_wallets\",\r\n                 data:getdata\r\n             });\r\n         }\r\n     }catch(err){\r\n         console.log(err);\r\n         res.status(500).json({\r\n              success: false,\r\n              message:\"***list_all_wallets error\"\r\n         })\r\n     }\r\n}\r\n\r\nasync function create_wallet(req, res) {\r\n    let walletAddress = req.body.walletAddress;\r\n    try {\r\n        let checkdata = await db.users.findOne({where:{wallet:walletAddress}});\r\n        if(checkdata){\r\n                res.json({\r\n                    message:`create_wallet: ${walletAddress} already exists`,\r\n                    data:checkdata\r\n                });\r\n        } else {\r\n            let createdata = await db.users.create({wallet: walletAddress});\r\n            if(createdata) {\r\n                    res.json({\r\n                        success: true,\r\n                        message:`create_wallet: ${walletAddress}`, \r\n                        data:createdata\r\n                    });\r\n            }\r\n        }\r\n    } catch(err) {\r\n        console.log(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            message:`create_wallet: ${walletAddress}`\r\n        })\r\n    }\r\n}\r\n\r\nexport const walletController = { list_all_wallets, create_wallet };"],"mappings":";;;;;;AAAA;AAAuC;AAEvC,eAAeA,gBAAgB,CAACC,GAAG,EAAEC,GAAG,EAAE;EACtC,IAAG;IACC,IAAIC,OAAO,GAAG,MAAMC,eAAE,CAACC,KAAK,CAACC,OAAO,CAACL,GAAG,CAACM,IAAI,CAAC;IAC9C,IAAGJ,OAAO,EAAC;MACND,GAAG,CAACM,IAAI,CAAC;QACLC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAC,kBAAkB;QAC1BC,IAAI,EAACR;MACT,CAAC,CAAC;IACN;EACJ,CAAC,QAAMS,GAAG,EAAC;IACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBV,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MAChBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAC;IACb,CAAC,CAAC;EACN;AACL;AAEA,eAAeM,aAAa,CAACf,GAAG,EAAEC,GAAG,EAAE;EACnC,IAAIe,aAAa,GAAGhB,GAAG,CAACM,IAAI,CAACU,aAAa;EAC1C,IAAI;IACA,IAAIC,SAAS,GAAG,MAAMd,eAAE,CAACC,KAAK,CAACc,OAAO,CAAC;MAACC,KAAK,EAAC;QAACC,MAAM,EAACJ;MAAa;IAAC,CAAC,CAAC;IACtE,IAAGC,SAAS,EAAC;MACLhB,GAAG,CAACM,IAAI,CAAC;QACLE,OAAO,EAAE,kBAAiBO,aAAc,iBAAgB;QACxDN,IAAI,EAACO;MACT,CAAC,CAAC;IACV,CAAC,MAAM;MACH,IAAII,UAAU,GAAG,MAAMlB,eAAE,CAACC,KAAK,CAACkB,MAAM,CAAC;QAACF,MAAM,EAAEJ;MAAa,CAAC,CAAC;MAC/D,IAAGK,UAAU,EAAE;QACPpB,GAAG,CAACM,IAAI,CAAC;UACLC,OAAO,EAAE,IAAI;UACbC,OAAO,EAAE,kBAAiBO,aAAc,EAAC;UACzCN,IAAI,EAACW;QACT,CAAC,CAAC;MACV;IACJ;EACJ,CAAC,CAAC,OAAMV,GAAG,EAAE;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBV,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,kBAAiBO,aAAc;IAC5C,CAAC,CAAC;EACN;AACJ;AAEO,MAAMO,gBAAgB,GAAG;EAAExB,gBAAgB;EAAEgB;AAAc,CAAC;AAAC"}